<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="test-suite.xml" doc:name="MUnit configuration" />

	<configuration-properties doc:name="Configuration properties"
		doc:id="c382dc50-b83c-41be-ad31-42ccb929d758" file="mule.test.properties" />
	<configuration-properties doc:name="Configuration properties"
		doc:id="59fef852-f885-4b1e-baac-96bce830be9f" file="mule-artifact.properties" />
	<configuration-properties doc:name="Configuration properties"
		doc:id="a0f29785-69a4-48b7-8ef5-410c95ee7ff2" file="common.properties" />
	<munit:before-test name="test-suiteBefore_Test"
		description="Before tests actions" doc:id="7f8facb1-95ae-4456-9448-faf3a3a89dc9">
		<salesforce:query doc:name="Select Users from instance A"
			doc:id="cccc4517-db8b-4312-a01f-ae288279705a" config-ref="Salesforce_Sfdc_A_config">
			<salesforce:salesforce-query>SELECT Name, Email, Username, Id FROM
				User WHERE Email in (':emailA1',':emailA2')
			</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"emailA1" : p('email.a'),
	"emailA2" : p('email.a.b')
}]]]></salesforce:parameters>
		</salesforce:query>
		<salesforce:query doc:name="Select Users from instance B" doc:id="15bd2dc6-04ff-4332-a1a5-6fe8d9fce5f9" config-ref="Salesforce_Sfdc_B_config">
			<salesforce:salesforce-query >SELECT Name, Email, Username, Id FROM
				User WHERE Email in (':emailB1',':emailB2')</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"emailB1" : p('email.a.b'),
	"emailB2" : p('email.b')
}]]]></salesforce:parameters>
		</salesforce:query>
		<munit-tools:mock-when doc:name="Mock email processor to avoid sending email"
			doc:id="17ab3357-3f08-4456-9f14-c41c281e06f1" processor="email:send">
			<munit-tools:then-return />
		</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="test-suite-businessLogicFlowTest"
		description="Test" doc:id="4ffcda90-21bf-4cd4-9460-09cf6ca578e5">
		<munit:execution>
			<flow-ref doc:name="businessLogicFlow" doc:id="3e0601a1-1b47-4974-83b0-8d30726559dd"
				name="businessLogicFlow" />
			<ee:transform doc:name="Filtering test records"
				doc:id="903370f0-c852-4d41-a25e-46f41bbe649b">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload filter ($.Email == p('email.a') or $.Email == p('email.b') or $.Email == p('email.a.b'))]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		</munit:execution>
		<munit:validation> <munit-tools:assert-that doc:name="Assert number of records" doc:id="f202c84b-b80c-42bf-b2bb-17b889c1bc50" expression="#[sizeOf(payload)]" 
			is="#[MunitTools::equalTo(3)]" message="Assert number of records" /> <munit-tools:assert-that 
			doc:name="Assert that email in the first record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" 
			is="#[MunitTools::equalTo(p('email.a'))]" expression="#[payload[0].Email]" 
			message="Assert that email in the first record is correct" /> <munit-tools:assert-that 
			doc:name="Assert that first record exists in instance A" doc:id="f3881a26-b7ed-4473-a4a2-a465aa5f544d" 
			expression="#[payload[0].IDInA]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" 
			message="Assert that first record exists in instance A" /> <munit-tools:assert-that 
			doc:name="Assert that first record does not exist in instance B" doc:id="f1900f46-2e69-4f50-b6db-9c240463ba59" 
			expression="#[payload[0].IDInB]" is="#[MunitTools::isEmptyOrNullString()]" 
			message="Assert that first record does not exist in instance B" /> <munit-tools:assert-that 
			doc:name="Assert that email in the second record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" 
			is="#[MunitTools::equalTo(p('email.b'))]" expression="#[payload[1].Email]" 
			message="Assert that email in the second record is correct" /> <munit-tools:assert-that 
			doc:name="Assert that secord record does not exist in instance A" doc:id="de0e4d31-5f43-4ddb-bcc1-bd107f2e4a26" 
			expression="#[payload[1].IDInA]" is="#[MunitTools::isEmptyOrNullString()]" 
			message="Assert that secord record does not exist in instance A" /> <munit-tools:assert-that 
			doc:name="Assert that secord record exists in instance B" doc:id="d518abcd-8c6a-4cc7-95ff-73d57797a003" 
			is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" expression="#[payload[1].IDInB]" 
			message="Assert that secord record exists in instance B" /> <munit-tools:assert-that 
			doc:name="Assert that email in the third record is correct" doc:id="df64f6a4-1444-43d1-9b31-069dccfb9c04" 
			is="#[MunitTools::equalTo(p('email.a.b'))]" expression="#[payload[2].Email]" 
			message="Assert that email in the third record is correct" /> <munit-tools:assert-that 
			doc:name="Assert that third record exists in instance A" doc:id="39ff4804-dc22-4263-85af-ec0396a50e81" 
			expression="#[payload[2].IDInA]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" 
			message="Assert that third record exists in instance A" /> <munit-tools:assert-that 
			doc:name="Assert that third record exists in instance B" doc:id="163b284b-1a69-4ee5-b71c-da0baf5d73e5" 
			expression="#[payload[2].IDInB]" is="#[MunitTools::not(MunitTools::isEmptyOrNullString())]" 
			message="Assert that third record exists in instance B" /> </munit:validation>
	</munit:test>

	<munit:after-test name="test-suiteAfter_Test"
		description="After tests actions" doc:id="5b85bb9e-67e6-47f7-8f71-53a39f147fc8">
	</munit:after-test>
</mule>